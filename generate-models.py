import os
import re
import sys

rootDir = '.'

genes = 'PB2', 'PB1', 'PA', 'NP', 'MP'

data = {
    # PB2 36
    'PB2': ('CA', 'NV', 'OR', 'WA', 'AK', 'BC', 'CO', 'TX', 'ND', 'AB', 'SK', 'AL', 'AR', 'IL', 'IA', 'LA', 'MI', 'MN', 'MS', 'MO', 'OH', 'WI', 'ON', 'DE', 'ME', 'MD', 'MA', 'NJ', 'NY', 'NC', 'PA', 'VA', 'QC', 'PE', 'NS', 'NB'),
    # PB1 38
    'PB1': ('CA', 'ID', 'NV', 'OR', 'WA', 'AK', 'BC', 'CO', 'TX', 'ND', 'AB', 'SK', 'AL', 'AR', 'IL', 'IA', 'LA', 'MI', 'MN', 'MS', 'MO', 'OH', 'WI', 'ON', 'DE', 'ME', 'MD', 'MA', 'NJ', 'NY', 'NC', 'PA', 'VA', 'QC', 'PE', 'NS', 'NB', 'NL'),
    # PA 38
    'PA': ('CA', 'OR', 'WA', 'AK', 'BC', 'CO', 'TX', 'SD', 'ND', 'AB', 'SK', 'AL', 'AR', 'IL', 'IA', 'LA', 'MI', 'MN', 'MS', 'MO', 'OH', 'WI', 'ON', 'DE', 'FL', 'ME', 'MD', 'MA', 'NJ', 'NY', 'NC', 'PA', 'VA', 'QC', 'PE', 'NS', 'NB', 'NL'),
    # NP 37
    'NP': ('CA', 'ID', 'OR', 'WA', 'AK', 'BC', 'CO', 'TX', 'ND', 'AB', 'SK', 'AL', 'AR', 'IL', 'IA', 'LA', 'MI', 'MN', 'MS', 'MO', 'OH', 'WI', 'ON', 'DE', 'FL', 'ME', 'MD', 'MA', 'NJ', 'NY', 'NC', 'PA', 'VA', 'QC', 'PE', 'NS', 'NB'),
    # MP 37
    'MP': ('CA', 'NV', 'OR', 'WA', 'AK', 'BC', 'CO', 'TX', 'ND', 'AB', 'SK', 'AL', 'AR', 'IL', 'IA', 'LA', 'MI', 'MN', 'MS', 'MO', 'OH', 'WI', 'ON', 'DE', 'ME', 'MD', 'MA', 'NJ', 'NY', 'NC', 'PA', 'VA', 'QC', 'PE', 'NS', 'NB', 'NL')
}

ga = {
	'PB2': '0,0,1,1,2,3,3,0,0,1,3,3,3,0,3,4,3,2,2,1,3,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,0,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,5,3,3,3,3,1,3,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,3,1,0,2,0,1,2,1,3,3,5,3,3,3,3,4,3,3,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,1,0,5,0,3,3,4,3,3,3,0,3,3,3,0,3,3,3,3,3,3,3,0,3,3,3,3,0,3,0,3,3,3,3,3,3,2,5,0,3,3,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,1,0,3,0,3,3,0,3,3,3,5,3,3,3,5,3,3,0,3,3,3,3,5,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,0,2,5,3,3,3,3,3,2,3,2,3,3,3,3,5,3,3,3,0,3,3,3,1,3,0,3,3,3,0,3,3,3,3,1,3,2,0,3,3,3,2,3,3,2,3,1,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,5,4,0,0,5,3,0,5,3,3,3,3,0,3,2,3,0,1,1,3,1,3,3,3,0,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,5,0,3,3,3,3,3,5,0,3,5,3,5,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,0,0,2,3,3,0,2,5,0,0,3,3,3,3,3,3,3,3,3,3,1,3,1,3,0,3,3,3,0,3,5,3,3,3,3,3,0,0,1,1,3,2,2,2,2,1,5,3,3,3,0,3,3,3,0,3,3,3,5,3,3,3,3,4,3,3,3,3,3,3,3,3,2,1,0,3,3,5,4,2,1,5,3,3,3,3,3,3,3,1,0,3,3,3,3,3,4,3,3,3,3,3,3,2,2,0,3,3,3,1,3,0,3,3,3,1,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,3,3,3,3,3,0,3,3,1,5,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,5,0,3,5,2,1,2,0,3,0,2,5,3,3,0,5,4,1,2,3,1,3,2,3,1,3,3,0,3,3,3,5,1,2,3,3,3,3,3,3,3,3,3,3,3,2,2,4,3,3,5,0,2,1,4,3,3,3,3,3,3,3,3,5,3,3,3,3,3,1,3,3,3,3,3,3,3,1,0,5,3,5,2,2,1,1,4,2,0,3,5,3,3,3,3,3,3,3,3,3,3,1,3,4,5,3,3,3,3,3,3,0,3,3,1,3,3,0,2,1,4,5,1,1,3,0,2,3,1,3,2,3,1,4,3,5,0,4,3,0,3,5,0,3,3,3,3,3,3,3,1,5,5,0,1,5,3,3,2,4,5,2,0,0,3,0,3,3,0,4,3,3,3,3,3,0,0,3,3,3,3,3,3,3,5,3,3,3,3,3,5,3,3,3,3,3,3,3,0,0,3,3,1,1,3,3,3,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,1,3,3,1,3,3,0,3,4,3,2,5,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,0,3,3,0,3,0,3,3,2,3,4,1,3,3,3,3,0,3,5,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,1,4,3,0,3,1,1,2,3,3,1,5,5,2,3,3,3,3,3,3,3,0,3,3,3,3,3,0,3,3,3,3,3,3,3,3,1,3,3,3,0,5,3,4,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,1,3,3,1,0,3,2,0,1,5,0,2,3,5,5,4,3,3,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,3,5,3,1,3,2,0,3,2,3,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,0,2,4,3,3,0,3,3,1,3,3,3,3,3,3,3,0,3,3,1,3,3,3,3,3,0,0,3,3,0,5,3,5,3,4,3,3,3,2,5,2,3,0,2,3,3,3,3,3,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,4,0,3,3,3,5,3,3,2,0,3,3,3,3,3,3,3,3,0,3,3,0,3,0,1,3,1,3,3,3,3,3,3,1,4,3,4,0,2,1,3,4,5,1,3,3,0,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,3,3,3,3,3,3,3,0,2,2,3,3,5,3,3,3,3,3,3,3,3,3,1,5,3,3,2,5,3,4,0,0,3,3,4,5,3,3,3,3,3,3,3,2,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,5,3,0,3,3,1,2,3,5,3,3,3,3,2,2,2,0',
	'PB1': '0,0,1,2,2,3,1,0,2,2,4,1,1,1,3,1,1,1,4,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,2,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,5,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,5,0,3,1,3,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,3,0,4,3,1,1,1,1,1,1,3,1,2,1,1,0,1,2,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,4,0,1,1,1,1,2,1,1,1,1,1,0,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,0,1,2,1,0,1,1,0,1,1,1,1,1,1,0,1,1,2,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,0,2,1,1,1,1,0,1,3,1,3,3,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,3,1,1,1,1,2,0,1,3,1,1,2,2,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,4,1,1,1,1,2,0,1,1,1,0,0,1,1,1,1,0,0,3,1,1,2,3,1,2,1,1,1,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,0,0,1,1,1,1,1,2,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,3,1,0,1,1,1,1,1,1,0,1,5,1,1,1,1,5,1,1,1,1,3,1,3,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,0,2,1,1,1,1,0,3,2,1,3,5,3,3,4,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,2,1,1,1,1,2,1,1,1,5,3,0,1,1,0,1,1,2,0,1,1,1,1,0,1,1,3,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,3,1,0,1,1,1,2,1,0,1,0,0,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,1,0,2,1,1,1,1,1,0,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,0,2,1,1,3,2,3,1,1,1,3,0,0,0,0,1,2,4,3,1,2,1,3,1,2,1,1,0,1,0,1,1,4,1,2,1,1,1,1,1,1,1,3,2,1,1,1,1,5,1,0,1,1,0,5,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,0,1,1,1,1,1,1,5,3,1,3,1,2,5,0,2,1,1,1,2,1,1,1,1,1,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,3,2,2,0,4,1,2,0,3,0,1,0,3,1,4,0,1,0,0,1,0,1,2,1,1,1,1,0,1,1,1,1,1,1,3,0,0,1,4,0,1,1,3,0,1,3,0,0,1,1,0,1,0,2,1,1,1,1,1,1,0,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,2,1,1,1,3,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,0,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,0,1,4,1,5,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,2,0,1,1,1,0,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,3,1,1,3,0,2,4,1,0,1,2,4,3,2,1,4,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,2,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,2,1,1,1,1,1,1,1,2,1,1,4,0,1,5,1,2,1,0,3,1,2,1,0,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,4,2,3,0,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,3,1,1,3,1,1,1,0,1,3,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,2,3,2,3,1,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,2,0,1,1,1,1,1,3,3,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,0,1,2,1,1,2,1,1,4,1,0,1,1,1,1,0,4,0,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,2,1,4,1,1,4,0,5,3,3,1,1,1,1,1,1,0,1,1,1,1,1,1,1,2,1,1,1,1,1,0,1,1,1,1,2,1,1,1,1,1,1,1,0,5,0,5,2,1,1,1,1,1,1,0,1,1,1,1,1,1,1,2,1,1,1,4,1,1,2,0,1,1,2,4,1,0,1,1,1,1,4,3,5,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,2,1,0',
	'PA': '0,0,1,1,2,2,2,2,3,3,4,2,0,5,2,2,2,1,3,3,2,2,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,0,0,1,4,1,2,2,2,1,2,2,2,2,2,2,2,2,0,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0,3,1,2,2,2,2,2,0,2,5,2,2,2,3,0,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,1,4,3,0,2,4,2,2,2,3,2,2,4,2,2,0,2,0,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,0,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,0,2,2,2,4,2,5,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,4,2,2,2,5,2,1,2,1,0,2,2,2,2,4,3,0,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,3,0,2,2,2,2,2,4,2,3,2,0,2,2,4,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,1,2,2,2,2,3,2,0,2,2,2,1,2,2,5,2,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,3,2,2,3,0,4,4,2,2,0,2,2,4,2,2,0,2,1,4,2,5,5,2,3,2,2,2,2,2,0,2,2,2,2,2,2,2,2,4,2,0,2,2,2,2,2,2,2,0,2,2,2,2,2,2,4,2,2,2,3,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,3,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,5,4,2,2,2,2,1,4,2,2,0,5,1,2,2,2,1,3,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,5,4,2,2,2,2,5,0,5,0,2,5,1,1,3,1,2,2,2,3,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,1,5,0,2,2,4,2,1,3,0,2,2,2,2,2,3,0,2,1,2,2,2,2,5,4,2,2,2,2,0,2,2,1,3,5,0,2,2,2,0,2,0,2,2,2,5,0,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,3,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,0,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,0,2,1,0,0,0,2,0,1,0,3,1,4,2,2,5,4,2,0,0,3,3,1,1,0,0,2,4,5,2,5,2,2,4,2,4,4,2,5,4,3,2,2,2,2,2,0,2,3,4,2,2,1,1,2,2,2,3,0,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,3,2,2,2,2,2,2,2,2,2,2,2,3,1,1,5,2,3,1,0,5,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,4,2,2,2,2,2,4,2,5,2,2,2,3,3,0,0,1,0,5,0,1,2,5,2,2,1,2,3,3,2,3,0,0,2,2,0,2,2,2,2,2,2,2,2,4,2,5,3,3,4,1,0,2,2,1,0,3,1,0,4,2,2,4,2,2,2,0,2,0,2,2,2,2,0,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,4,0,2,2,2,5,2,2,2,2,2,5,3,2,2,2,2,2,2,2,4,2,2,4,2,2,3,2,2,2,2,2,2,2,0,2,2,5,2,2,0,2,2,3,2,1,2,2,2,0,3,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,3,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,3,2,2,2,4,2,2,2,4,2,2,2,0,2,2,2,2,2,2,2,5,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,0,4,5,2,2,1,2,5,3,2,2,0,4,3,3,1,2,2,5,2,2,0,2,2,2,2,2,2,2,2,2,2,2,4,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,4,0,2,3,1,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,5,2,2,3,2,2,1,3,2,3,2,0,1,2,3,2,0,2,2,5,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,3,0,2,2,4,2,3,3,1,0,2,5,0,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,0,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,2,3,0,2,2,2,2,2,5,3,5,2,0,5,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,5,0,2,2,2,2,2,0,2,5,0,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,4,2,2,0,2,3,3,2,5,5,2,0,2,5,2,2,0,5,1,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,0,1,1,1,2,2,2,2,2,2,2,2,5,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,4,2,0,5,4,3,0,0,2,2,2,2,0,2,5,2,2,3,2,5,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,0',
	'NP': '0,0,1,2,3,0,0,1,4,2,0,0,0,3,0,4,0,2,4,0,0,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,3,5,5,0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1,3,0,2,3,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,2,0,0,0,3,0,5,2,0,5,5,0,5,1,0,0,0,0,0,5,0,1,0,0,0,0,0,0,0,5,5,0,4,0,5,0,0,0,5,0,0,0,0,5,3,5,0,0,0,0,5,0,0,2,0,0,0,0,5,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,0,4,0,0,0,0,0,0,0,5,0,0,4,0,0,0,0,2,0,0,0,0,0,0,0,0,5,0,0,1,0,0,0,0,0,0,0,2,1,0,0,4,4,0,3,0,2,0,0,0,0,0,4,0,0,5,0,4,0,0,0,0,0,0,0,1,4,0,0,0,5,0,0,2,0,0,1,0,0,4,2,0,0,1,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,5,1,5,4,1,0,0,4,0,0,0,0,4,0,2,0,5,4,3,5,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,0,0,0,0,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,4,0,0,0,0,0,2,3,0,0,0,3,5,1,0,0,5,0,2,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,0,4,4,0,0,0,2,0,2,4,0,2,3,3,2,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,2,0,5,0,4,0,2,1,1,0,0,0,5,4,0,0,0,2,1,0,0,0,0,0,4,0,0,0,5,0,0,3,0,4,0,0,0,4,5,0,0,1,0,2,4,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,4,0,3,0,0,0,4,0,0,0,0,0,3,0,0,0,0,2,0,5,4,1,5,5,2,1,2,5,0,0,2,4,1,5,0,4,1,2,3,5,1,5,0,2,0,1,0,5,5,0,0,0,0,2,4,0,0,0,0,0,0,0,2,0,0,0,3,3,0,0,0,4,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,5,0,0,5,3,2,2,0,1,3,0,1,4,0,0,0,0,4,1,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,4,0,0,4,0,0,1,2,1,4,4,2,0,1,0,3,1,4,0,0,3,0,2,2,4,4,4,0,0,0,1,5,0,0,0,0,0,0,0,0,3,1,1,0,2,1,0,0,3,2,4,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,4,0,0,0,0,2,0,0,0,5,0,0,0,0,0,0,3,5,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,4,0,1,0,0,5,0,0,0,0,1,0,0,4,0,0,0,0,0,2,0,3,0,0,0,4,0,0,0,4,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,4,0,0,2,0,0,0,0,0,0,0,0,0,5,0,2,0,0,0,0,0,2,4,5,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,1,1,1,1,0,0,0,5,5,0,0,5,0,0,0,0,0,0,4,0,4,2,0,4,3,0,1,2,0,1,0,0,2,1,1,1,0,2,4,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,2,2,0,0,0,0,0,0,0,0,4,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,3,4,4,2,1,0,3,0,0,0,2,0,5,1,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,1,0,3,0,0,3,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,2,1,0,5,0,0,4,0,0,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,5,0,0,4,0,0,0,2,0,1,2,0,3,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,4,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,1,0,0,1,2,0,2,5,0,2,0,0,3,0,3,0,0,0,0,5,0,5,0,0,0,5,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,4,0,0,0,3,0,0,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,1,0,5,0,0,0,0,0,3,0,3,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,1,4,1,4,0,1,2,0,1,0,0,0,0,3,3,3,0',
	'MP': '0,0,1,2,3,4,1,5,0,5,4,4,4,2,1,1,4,3,2,2,4,1,4,4,4,1,4,0,4,0,0,4,4,4,4,4,4,0,0,4,2,0,4,4,1,2,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,4,0,3,0,3,4,4,4,0,4,4,2,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,2,3,0,2,3,4,4,4,1,4,4,4,4,2,4,4,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,0,0,2,0,1,1,4,4,5,4,4,1,0,4,0,4,1,4,4,4,0,4,0,0,4,4,4,4,4,4,4,4,4,4,0,4,4,4,3,3,1,0,4,4,4,1,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,4,4,4,1,4,0,4,2,1,2,4,4,4,4,4,2,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,1,4,4,4,4,4,0,4,1,4,4,5,2,5,2,5,2,4,5,4,1,4,0,4,4,4,1,4,4,4,4,4,4,4,4,4,0,2,4,4,4,4,2,4,0,4,4,4,3,5,4,3,4,5,4,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,1,4,5,4,0,1,5,1,1,1,4,0,0,4,4,4,4,5,4,3,4,4,5,3,4,2,4,1,4,4,4,4,0,4,4,4,4,4,0,4,4,4,4,4,2,2,4,4,0,0,4,4,4,4,4,4,1,4,4,4,5,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,4,1,4,4,5,3,4,4,4,0,2,5,4,5,4,3,3,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,2,0,4,4,0,4,4,2,5,4,4,4,2,0,2,2,1,3,3,3,2,2,4,4,4,1,4,4,4,4,4,4,4,4,5,2,2,1,4,4,2,4,4,4,5,4,4,4,4,5,2,0,2,4,1,2,3,5,1,4,0,4,4,1,4,4,2,4,4,4,4,4,4,2,1,4,4,4,0,4,4,2,3,5,4,4,4,2,2,0,4,1,4,1,5,0,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,4,4,4,4,4,4,2,5,4,4,4,4,5,1,4,4,0,0,5,0,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,0,1,1,4,4,2,5,3,1,4,4,3,1,1,0,0,4,4,3,2,4,1,4,5,4,5,4,0,1,4,4,4,0,2,4,2,4,4,4,4,4,4,4,4,4,4,4,3,3,2,4,5,4,0,3,5,5,4,4,5,4,4,4,4,4,4,4,4,4,4,4,0,2,4,4,4,4,4,4,5,2,4,4,4,3,3,3,1,0,4,3,0,2,2,4,4,4,4,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,5,4,4,4,2,5,5,4,3,5,2,0,3,5,2,0,3,4,2,2,0,5,1,1,4,4,2,4,1,4,4,4,0,4,4,1,4,3,5,5,4,2,1,0,4,2,5,2,3,0,0,4,4,4,4,1,5,4,4,4,4,4,0,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,0,0,0,4,0,4,4,4,3,4,4,3,4,4,4,4,4,4,4,4,0,4,4,0,4,2,0,4,0,4,0,4,0,1,4,4,2,4,0,0,4,5,4,3,1,4,0,1,0,4,4,1,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,0,4,4,4,0,5,4,4,4,4,4,4,2,3,4,5,5,1,4,4,4,4,4,4,4,4,1,4,4,4,1,4,4,4,5,4,4,3,4,0,5,5,0,1,2,2,2,4,4,2,4,5,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,4,4,4,4,1,4,4,4,4,4,1,0,1,4,4,4,3,4,4,4,4,4,0,4,4,4,4,4,4,1,4,4,4,4,4,4,4,4,4,5,4,4,2,1,4,3,4,2,1,0,3,4,4,4,1,0,4,4,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,5,4,1,4,2,4,3,0,4,3,4,2,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,2,4,4,0,4,4,0,4,3,4,4,2,4,4,4,0,4,3,4,4,4,4,4,0,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,1,4,4,5,4,4,0,4,4,4,4,3,4,0,3,2,4,4,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,4,4,1,4,4,3,4,4,3,3,0,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,4,3,0,2,2,4,1,2,4,2,2,0,2,2,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,4,0,4,4,4,4,2,0,3,3,2,4,4,4,4,4,4,4,4,2,4,4,4,4,5,4,4,4,0,4,4,4,0,4,4,4,5,4,4,4,4,4,4,2,3,0,2,4,4,4,4,4,0,4,4,4,1,4,4,4,4,2,4,5,4,2,4,4,2,1,4,1,5,2,4,4,4,4,1,4,5,3,2,0,2,4,4,4,4,4,4,4,4,4,0,4,4,4,2,2,5,4,4,0,4,4,4,4,4,5,4,4,2,4,4,4,4,5,2,4,2,0'
}


def parse_countries(path):
    dic = {}
    with open(path) as fp:
        for line in fp:
            line = line.rstrip('\n').rstrip('\r')

            if not line.startswith('State'):
                l = line.split(',')
                dic[l[1]] = l[2]
    return dic


def get_flyway_model(fs, stateToFlyway):
    model = ''
    flywayToRateIndex = {}
    for i in range(len(fs)):
        flywayToRateIndex[fs[i]] = {}
        for j in range(len(fs)):
            flywayToRateIndex[fs[i]][fs[j]] = 0

    count = 0
    for i in range(len(fs)):
        flywayToRateIndex[fs[i]][fs[i]] = count
        count += 1
        for j in range(i+1, len(fs)):
            flywayToRateIndex[fs[i]][fs[j]] = flywayToRateIndex[fs[j]][fs[i]] = count
            count += 1

    ss = data[gene]
    for state1 in ss:
        for state2 in ss:
            if state1 == state2:
                model += '0,'
            else:
                model += str(flywayToRateIndex[stateToFlyway[state1]][stateToFlyway[state2]]) + ','
    return model.rstrip(',')


def get_two_rate_model(stateToFlyway):
    model = ''
    ss = data[gene]
    for state1 in ss:
        for state2 in ss:
            if stateToFlyway[state1] == stateToFlyway[state2]:
                model += '0,'
            else:
                model += '1,'
    return model.rstrip(',')


re_state = re.compile(r'^>.+(\w{2})$')

stateTo4Flyway = parse_countries(os.path.join(rootDir, 'countries.csv'))

stateTo3Flyway = stateTo4Flyway.copy()
for state in stateTo3Flyway.keys():
    if stateTo3Flyway[state] == 'Mississippi':
        stateTo3Flyway[state] = 'Central'

fs4 = ['Pacific', 'Central', 'Mississippi', 'Atlantic']
fs3 = ['Pacific', 'Central', 'Atlantic']

for gene in genes:

    gene_dir = os.path.join(rootDir, gene)
    
    sys.stdout.write(gene + '\n')

    sys.stdout.write('Number of states ' + str(len(data[gene])) + '\n')

    sys.stdout.write('Homogeneous rate model (HRM):\n\n')

    cmd = 'physher -i ' + os.path.join(gene_dir, gene.lower() + '-geo.fa') + ' -t ' + os.path.join(gene_dir, gene.lower() + '.tree')
    cmd += ' --states ' + ','.join(data[gene]) + ' -m ER -F df -o ' + os.path.join(gene_dir, '4FRM') + ' --q-normalize false --f-unknown'
    sys.stdout.write(cmd + '\n\n')
    
    sys.stdout.write('4 flyway model (4-FRM):\n\n')
    m = get_flyway_model(fs4, stateTo4Flyway)

    cmd = 'physher -i ' + os.path.join(gene_dir, gene.lower() + '-geo.fa') + ' -t ' + os.path.join(gene_dir, gene.lower() + '.tree')
    cmd += ' --states ' + ','.join(data[gene]) + ' -m ' + m + ' -F df -o ' + os.path.join(gene_dir, '4FRM') + ' --q-normalize false --f-unknown'
    sys.stdout.write(cmd + '\n\n')

    sys.stdout.write('3 flyway rate model (3-FRM):\n\n')
    m = get_flyway_model(fs3, stateTo3Flyway)

    cmd = 'physher -i ' + os.path.join(gene_dir, gene.lower() + '-geo.fa') + ' -t ' + os.path.join(gene_dir, gene.lower() + '.tree')
    cmd += ' --states ' + ','.join(data[gene]) + ' -m ' + m + ' -F df -o ' + os.path.join(gene_dir, '3FRM') + ' --q-normalize false --f-unknown'
    sys.stdout.write(cmd + '\n\n')

    sys.stdout.write('2 rate model with 4 flyways (4-TRM):\n\n')
    m = get_two_rate_model(stateTo4Flyway)

    cmd = 'physher -i ' + os.path.join(gene_dir, gene.lower() + '-geo.fa') + ' -t ' + os.path.join(gene_dir, gene.lower() + '.tree')
    cmd += ' --states ' + ','.join(data[gene]) + ' -m ' + m + ' -F df -o ' + os.path.join(gene_dir, '4TRM') + ' --q-normalize false --f-unknown'
    sys.stdout.write(cmd + '\n\n')

    sys.stdout.write('2 rate model with 3 flyways (3-TRM):\n\n')
    m = get_two_rate_model(stateTo3Flyway)

    cmd = 'physher -i ' + os.path.join(gene_dir, gene.lower() + '-geo.fa') + ' -t ' + os.path.join(gene_dir, gene.lower() + '.tree')
    cmd += ' --states ' + ','.join(data[gene]) + ' -m ' + m + ' -F df -o ' + os.path.join(gene_dir, '3TRM') + ' --q-normalize false --f-unknown'
    sys.stdout.write(cmd + '\n\n')

    sys.stdout.write('\n\n')
    
    sys.stdout.write('Best model found by GA:\n\n')

    cmd = 'physher -i ' + os.path.join(gene_dir, gene.lower() + '-geo.fa') + ' -t ' + os.path.join(gene_dir, gene.lower() + '.tree')
    cmd += ' --states ' + ','.join(data[gene]) + ' -m ' + ga[gene] + ' -F df -o ' + os.path.join(gene_dir, 'gabest') + ' --q-normalize false --f-unknown'
    sys.stdout.write(cmd + '\n\n')

    sys.stdout.write('\n\n')
    
    
    sys.stdout.write('Rerun GA from best model using 5 threads:\n\n')

    cmd = 'physher -i ' + os.path.join(gene_dir, gene.lower() + '-geo.fa') + ' -t ' + os.path.join(gene_dir, gene.lower() + '.tree')
    cmd += ' --states ' + ','.join(data[gene]) + ' -m ' + ga[gene] + ' -F df -o ' + os.path.join(gene_dir, 'ga') + ' --q-normalize false --f-unknown --q-search ga -T 5'
    sys.stdout.write(cmd + '\n\n')

    sys.stdout.write('\n\n')
